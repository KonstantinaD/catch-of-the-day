{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","current","value","props","history","push","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","Header","tagline","Order","renderOrder","key","buttonRemoveAll","fish","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","onClick","removeAllFromOrder","component","name","price","removeOneFromOrder","orderFishIds","Object","keys","total","reduce","prevTotal","map","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","parseFloat","desc","image","addFish","currentTarget","reset","EditFishForm","handleChange","console","log","updatedFish","updateFish","index","onChange","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","authData","a","async","fetch","storeId","context","store","post","data","user","setState","provider","authProvider","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","loadSampleFishes","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","details","src","alt","disabled","addToOrder","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","document","getElementById"],"mappings":"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","file":"static/js/main.1fcfbdbd.chunk.js","sourcesContent":["export function formatPrice(cents) {\r\n  return (cents / 100).toLocaleString(\"en-US\", {\r\n    style: \"currency\",\r\n    currency: \"USD\"\r\n  });\r\n}\r\n\r\nexport function rando(arr) {\r\n  return arr[Math.floor(Math.random() * arr.length)];\r\n}\r\n\r\nexport function slugify(text) {\r\n  return text\r\n    .toString()\r\n    .toLowerCase()\r\n    .replace(/\\s+/g, \"-\")\r\n    .replace(/[^\\w-]+/g, \"\")\r\n    .replace(/--+/g, \"-\")\r\n    .replace(/^-+/, \"\")\r\n    .replace(/-+$/, \"\");\r\n}\r\n\r\nexport function getFunName() {\r\n  const adjectives = [\r\n    \"adorable\",\r\n    \"beautiful\",\r\n    \"clean\",\r\n    \"drab\",\r\n    \"elegant\",\r\n    \"fancy\",\r\n    \"glamorous\",\r\n    \"handsome\",\r\n    \"long\",\r\n    \"magnificent\",\r\n    \"old-fashioned\",\r\n    \"plain\",\r\n    \"quaint\",\r\n    \"sparkling\",\r\n    \"ugliest\",\r\n    \"unsightly\",\r\n    \"angry\",\r\n    \"bewildered\",\r\n    \"clumsy\",\r\n    \"defeated\",\r\n    \"embarrassed\",\r\n    \"fierce\",\r\n    \"grumpy\",\r\n    \"helpless\",\r\n    \"itchy\",\r\n    \"jealous\",\r\n    \"lazy\",\r\n    \"mysterious\",\r\n    \"nervous\",\r\n    \"obnoxious\",\r\n    \"panicky\",\r\n    \"repulsive\",\r\n    \"scary\",\r\n    \"thoughtless\",\r\n    \"uptight\",\r\n    \"worried\"\r\n  ];\r\n\r\n  const nouns = [\r\n    \"women\",\r\n    \"men\",\r\n    \"children\",\r\n    \"teeth\",\r\n    \"feet\",\r\n    \"people\",\r\n    \"leaves\",\r\n    \"mice\",\r\n    \"geese\",\r\n    \"halves\",\r\n    \"knives\",\r\n    \"wives\",\r\n    \"lives\",\r\n    \"elves\",\r\n    \"loaves\",\r\n    \"potatoes\",\r\n    \"tomatoes\",\r\n    \"cacti\",\r\n    \"foci\",\r\n    \"fungi\",\r\n    \"nuclei\",\r\n    \"syllabuses\",\r\n    \"analyses\",\r\n    \"diagnoses\",\r\n    \"oases\",\r\n    \"theses\",\r\n    \"crises\",\r\n    \"phenomena\",\r\n    \"criteria\",\r\n    \"data\"\r\n  ];\r\n\r\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getFunName } from \"../helpers\";\r\n\r\nclass StorePicker extends Component {\r\n  //create empty ref\r\n  myInput = React.createRef();\r\n\r\n  static propTypes = {\r\n    history: PropTypes.shape({\r\n      action: PropTypes.string.isRequired,\r\n      block: PropTypes.func.isRequired,\r\n      createHref: PropTypes.func.isRequired,\r\n      go: PropTypes.func.isRequired,\r\n      goBack: PropTypes.func.isRequired,\r\n      goForward: PropTypes.func.isRequired,\r\n      length: PropTypes.number.isRequired,\r\n      listen: PropTypes.func.isRequired,\r\n      location: PropTypes.shape({\r\n        hash: PropTypes.string.isRequired,\r\n        pathname: PropTypes.string.isRequired,\r\n        search: PropTypes.string.isRequired,\r\n        state: PropTypes.object\r\n      }).isRequired,\r\n      push: PropTypes.func.isRequired,\r\n      replace: PropTypes.func.isRequired\r\n    }).isRequired\r\n  };\r\n\r\n  goToStore = (event) => {\r\n    // 1. stop the form from submitting\r\n    event.preventDefault();\r\n    // 2. get the text from the input\r\n    const storeName = this.myInput.current.value;\r\n    // 3. change the page to /store/whatever-they-entered\r\n    this.props.history.push(`/store/${storeName}`);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"store-selector\" onSubmit={this.goToStore}>\r\n        <h2>Please enter a store</h2>\r\n        <input\r\n          type=\"text\"\r\n          //surface the input on the component so that we can grab it\r\n          ref={this.myInput}\r\n          required\r\n          placeholder=\"Store Name\"\r\n          defaultValue={getFunName()}\r\n        />\r\n        <button type=\"submit\">Visit Store -></button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StorePicker;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Header = (props) => (\r\n  <header className=\"top\">\r\n    <h1>\r\n      Catch\r\n      <span className=\"ofThe\">\r\n        <span className=\"of\">Of</span>\r\n        <span className=\"the\">The</span>\r\n      </span>\r\n      Day\r\n    </h1>\r\n    <h3 className=\"tagline\">\r\n      <span>{props.tagline}</span>\r\n    </h3>\r\n  </header>\r\n);\r\n\r\nHeader.propTypes = {\r\n  tagline: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport PropTypes from \"prop-types\";\r\nimport { formatPrice } from \"../helpers\";\r\n\r\nclass Order extends Component {\r\n  static propTypes = {\r\n    fishes: PropTypes.objectOf(\r\n      PropTypes.shape({\r\n        image: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        desc: PropTypes.string.isRequired,\r\n        status: PropTypes.string.isRequired,\r\n        price: PropTypes.string.isRequired\r\n      }).isRequired\r\n    ).isRequired,\r\n    order: PropTypes.objectOf(PropTypes.number.isRequired).isRequired,\r\n    removeOneFromOrder: PropTypes.func.isRequired,\r\n    removeAllFromOrder: PropTypes.func.isRequired\r\n  };\r\n\r\n  renderOrder = (key) => {\r\n    const fish = this.props.fishes[key];\r\n    const count = this.props.order[key];\r\n    const isAvailable = fish && fish.status === \"available\";\r\n    const transitionOptions = {\r\n      classNames: \"order\",\r\n      key,\r\n      timeout: { enter: 500, exit: 500 }\r\n    };\r\n\r\n    let buttonRemoveAll;\r\n    if (count > 1) {\r\n      buttonRemoveAll = (\r\n        <button onClick={() => this.props.removeAllFromOrder(key)}>\r\n          &times;\r\n        </button>\r\n      );\r\n    }\r\n\r\n    //make sure the fish is loaded before we continue - don't display in Order until we get the fish in the menu\r\n    if (!fish) return null;\r\n\r\n    if (!isAvailable) {\r\n      return (\r\n        <CSSTransition {...transitionOptions}>\r\n          <li key={key}>\r\n            Sorry, {fish ? fish.name : \"the fish\"} is no longer available\r\n          </li>\r\n        </CSSTransition>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <CSSTransition {...transitionOptions}>\r\n        <li key={key}>\r\n          <span>\r\n            <TransitionGroup component=\"span\" className=\"count\">\r\n              <CSSTransition\r\n                classNames=\"count\"\r\n                key={count}\r\n                timeout={{ enter: 500, exit: 500 }}\r\n              >\r\n                <span>{count}</span>\r\n              </CSSTransition>\r\n            </TransitionGroup>\r\n            lbs {fish.name} {formatPrice(count * fish.price)}\r\n            <button onClick={() => this.props.removeOneFromOrder(key)}>\r\n              &times;\r\n            </button>\r\n          </span>\r\n          {buttonRemoveAll}\r\n        </li>\r\n      </CSSTransition>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const orderFishIds = Object.keys(this.props.order);\r\n    const total = orderFishIds.reduce((prevTotal, key) => {\r\n      const fish = this.props.fishes[key];\r\n      const count = this.props.order[key];\r\n      const isAvailable = fish && fish.status === \"available\";\r\n      if (isAvailable) {\r\n        return prevTotal + count * fish.price;\r\n      }\r\n      return prevTotal;\r\n    }, 0);\r\n\r\n    return (\r\n      <div className=\"order-wrap\">\r\n        <h2>Order</h2>\r\n        <TransitionGroup component=\"ul\" className=\"order\">\r\n          {orderFishIds.map(this.renderOrder)}\r\n        </TransitionGroup>\r\n        <div className=\"total\">\r\n          Total:\r\n          <strong>{formatPrice(total)}</strong>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Order;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass AddFishForm extends Component {\r\n  nameRef = React.createRef();\r\n  priceRef = React.createRef();\r\n  statusRef = React.createRef();\r\n  descRef = React.createRef();\r\n  imageRef = React.createRef();\r\n\r\n  static propTypes = {\r\n    addFish: PropTypes.func.isRequired\r\n  };\r\n\r\n  createFish = (event) => {\r\n    // stop the form from submitting\r\n    event.preventDefault();\r\n    const fish = {\r\n      name: this.nameRef.current.value,\r\n      price: parseFloat(this.priceRef.current.value),\r\n      status: this.statusRef.current.value,\r\n      desc: this.descRef.current.value,\r\n      image: this.imageRef.current.value\r\n    };\r\n    this.props.addFish(fish);\r\n    // refresh the form\r\n    event.currentTarget.reset();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"fish-edit\" onSubmit={this.createFish}>\r\n        <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\r\n        <input\r\n          name=\"price\"\r\n          ref={this.priceRef}\r\n          type=\"text\"\r\n          placeholder=\"Price\"\r\n        />\r\n        <select name=\"status\" ref={this.statusRef}>\r\n          <option value=\"available\">Fresh!</option>\r\n          <option value=\"unavailable\">Sold Out!</option>\r\n        </select>\r\n        <textarea name=\"desc\" ref={this.descRef} placeholder=\"Desc\"></textarea>\r\n        <input\r\n          name=\"image\"\r\n          ref={this.imageRef}\r\n          type=\"text\"\r\n          placeholder=\"Image\"\r\n        />\r\n        <button type=\"submit\">+ Add Fish</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddFishForm;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass EditFishForm extends Component {\r\n  static propTypes = {\r\n    fish: PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      image: PropTypes.string.isRequired,\r\n      desc: PropTypes.string.isRequired,\r\n      status: PropTypes.string.isRequired,\r\n      price: PropTypes.string.isRequired\r\n    }),\r\n    index: PropTypes.string.isRequired,\r\n    updateFish: PropTypes.func.isRequired,\r\n    deleteFish: PropTypes.func.isRequired\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    console.log(event.currentTarget.name);\r\n    //update the fish\r\n    // 1. Take a copy of the current fish, overwrite the property that changed\r\n    const updatedFish = {\r\n      ...this.props.fish,\r\n      [event.currentTarget.name]: event.currentTarget.value\r\n    };\r\n    // send the updated fish upstream - to state in App\r\n    this.props.updateFish(this.props.index, updatedFish);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"fish-edit\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          onChange={this.handleChange}\r\n          value={this.props.fish.name}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"price\"\r\n          onChange={this.handleChange}\r\n          value={this.props.fish.price}\r\n        />\r\n        <select\r\n          name=\"status\"\r\n          onChange={this.handleChange}\r\n          value={this.props.fish.status}\r\n        >\r\n          <option value=\"available\">Fresh!</option>\r\n          <option value=\"unavailable\">Sold Out!</option>\r\n        </select>\r\n        <textarea\r\n          name=\"desc\"\r\n          onChange={this.handleChange}\r\n          value={this.props.fish.desc}\r\n        ></textarea>\r\n        <input\r\n          type=\"text\"\r\n          name=\"image\"\r\n          onChange={this.handleChange}\r\n          value={this.props.fish.image}\r\n        />\r\n        <button onClick={() => this.props.deleteFish(this.props.index)}>\r\n          Remove Fish\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditFishForm;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Login = (props) => (\r\n  <nav className=\"login\">\r\n    <h2>Inventory Login</h2>\r\n    <p>Sign in to manage your store's inventory</p>\r\n    <button className=\"github\" onClick={() => props.authenticate(\"Github\")}>\r\n      Log In With Github\r\n    </button>\r\n    <button className=\"twitter\" onClick={() => props.authenticate(\"Twitter\")}>\r\n      Log In With Twitter\r\n    </button>\r\n    <button className=\"facebook\" onClick={() => props.authenticate(\"Facebook\")}>\r\n      Log In With Facebook\r\n    </button>\r\n  </nav>\r\n);\r\n\r\nLogin.propTypes = {\r\n  authenticate: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Login;\r\n","import Rebase from \"re-base\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/database\";\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n  apiKey: \"AIzaSyDAUZng3B-NuBYyz9YpALpEygA-RyxUQ-A\",\r\n  authDomain: \"catch-of-the-day-konstantina.firebaseapp.com\",\r\n  databaseURL: \"https://catch-of-the-day-konstantina.firebaseio.com\"\r\n});\r\n\r\nconst base = Rebase.createClass(firebaseApp.database());\r\n\r\n// this is a named export - we know what it is called\r\nexport { firebaseApp };\r\n\r\n// this is a default export - the main thing exported; allows us to bring it into other files\r\nexport default base;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport AddFishForm from \"./AddFishForm\";\r\nimport EditFishForm from \"./EditFishForm\";\r\nimport Login from \"./Login\";\r\nimport base, { firebaseApp } from \"../base\";\r\n\r\nclass Inventory extends Component {\r\n  static propTypes = {\r\n    fishes: PropTypes.objectOf(\r\n      PropTypes.shape({\r\n        image: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        desc: PropTypes.string.isRequired,\r\n        status: PropTypes.string.isRequired,\r\n        price: PropTypes.string.isRequired\r\n      }).isRequired\r\n    ).isRequired,\r\n    loadSampleFishes: PropTypes.func.isRequired,\r\n    addFish: PropTypes.func.isRequired,\r\n    updateFish: PropTypes.func.isRequired,\r\n    deleteFish: PropTypes.func.isRequired\r\n  };\r\n\r\n  state = {\r\n    uid: null,\r\n    owner: null\r\n  };\r\n\r\n  //on page reload, check if the user is logged in\r\n  componentDidMount() {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      if (user) {\r\n        this.authHandler({ user });\r\n      }\r\n    });\r\n  }\r\n\r\n  authHandler = async (authData) => {\r\n    // 1. Look up the current store in the Firebase database\r\n    const store = await base.fetch(this.props.storeId, { context: this });\r\n    // 2. Claim it if there is no owner - if we are the first person to log in, we are likely the owner - we will claim it as an owner and save that data to the Firebase db\r\n    if (!store.owner) {\r\n      //save it as our own\r\n      await base.post(`${this.props.storeId}/owner`, {\r\n        data: authData.user.uid\r\n      });\r\n    }\r\n    // 3. Set the state of the Inventory component to reflect the current user\r\n    this.setState({\r\n      uid: authData.user.uid,\r\n      owner: store.owner || authData.user.uid\r\n    });\r\n  };\r\n\r\n  authenticate = (provider) => {\r\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]();\r\n    firebaseApp.auth().signInWithPopup(authProvider).then(this.authHandler);\r\n  };\r\n\r\n  logout = async () => {\r\n    await firebaseApp.auth().signOut();\r\n    this.setState({ uid: null });\r\n  };\r\n\r\n  render() {\r\n    const logout = <button onClick={this.logout}>Log Out!</button>;\r\n    // 1. Check if they are not logged in - render Login buttons\r\n    if (!this.state.uid) {\r\n      return <Login authenticate={this.authenticate} />;\r\n    }\r\n\r\n    // 2. Check if they are not the owner of the store\r\n    if (this.state.uid !== this.state.owner) {\r\n      return (\r\n        <div>\r\n          <p>Sorry, you are not the owner!</p>\r\n          {logout}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    // 3. They must be the owner, just render the inventory\r\n    return (\r\n      <div className=\"inventory\">\r\n        <h2>Inventory</h2>\r\n        {logout}\r\n        {Object.keys(this.props.fishes).map((key) => (\r\n          <EditFishForm\r\n            key={key}\r\n            index={key}\r\n            fish={this.props.fishes[key]}\r\n            updateFish={this.props.updateFish}\r\n            deleteFish={this.props.deleteFish}\r\n          />\r\n        ))}\r\n        <AddFishForm addFish={this.props.addFish} />\r\n        <button onClick={this.props.loadSampleFishes}>\r\n          Load Sample Fishes\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Inventory;\r\n","// This is just some sample data so you don't have to think of your own!\r\nconst fishes = {\r\n  fish1: {\r\n    name: \"Pacific Halibut\",\r\n    image: \"/images/hali.jpg\",\r\n    desc:\r\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\r\n    price: 1724,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish2: {\r\n    name: \"Lobster\",\r\n    image: \"/images/lobster.jpg\",\r\n    desc:\r\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\r\n    price: 3200,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish3: {\r\n    name: \"Sea Scallops\",\r\n    image: \"/images/scallops.jpg\",\r\n    desc:\r\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\r\n    price: 1684,\r\n    status: \"unavailable\"\r\n  },\r\n\r\n  fish4: {\r\n    name: \"Mahi Mahi\",\r\n    image: \"/images/mahi.jpg\",\r\n    desc:\r\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\r\n    price: 1129,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish5: {\r\n    name: \"King Crab\",\r\n    image: \"/images/crab.jpg\",\r\n    desc:\r\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\r\n    price: 4234,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish6: {\r\n    name: \"Atlantic Salmon\",\r\n    image: \"/images/salmon.jpg\",\r\n    desc:\r\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\r\n    price: 1453,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish7: {\r\n    name: \"Oysters\",\r\n    image: \"/images/oysters.jpg\",\r\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\r\n    price: 2543,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish8: {\r\n    name: \"Mussels\",\r\n    image: \"/images/mussels.jpg\",\r\n    desc:\r\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\r\n    price: 425,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish9: {\r\n    name: \"Jumbo Prawns\",\r\n    image: \"/images/prawns.jpg\",\r\n    desc:\r\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\r\n    price: 2250,\r\n    status: \"available\"\r\n  }\r\n};\r\n\r\nexport default fishes;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { formatPrice } from \"../helpers\";\r\n\r\nclass Fish extends Component {\r\n  static propTypes = {\r\n    details: PropTypes.shape({\r\n      image: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      desc: PropTypes.string.isRequired,\r\n      status: PropTypes.string.isRequired,\r\n      price: PropTypes.string.isRequired\r\n    }),\r\n    index: PropTypes.string.isRequired,\r\n    addToOrder: PropTypes.func.isRequired\r\n  };\r\n\r\n  render() {\r\n    const { image, name, price, desc, status } = this.props.details;\r\n    const isAvailable = status === \"available\";\r\n    return (\r\n      <li className=\"menu-fish\">\r\n        <img src={image} alt={name} />\r\n        <h3 className=\"fish-name\">\r\n          {name}\r\n          <span className=\"price\">{formatPrice(price)}</span>\r\n        </h3>\r\n        <p>{desc}</p>\r\n        <button\r\n          disabled={!isAvailable}\r\n          onClick={() => this.props.addToOrder(this.props.index)}\r\n        >\r\n          {isAvailable ? \"Add To Order\" : \"Sold Out!\"}\r\n        </button>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Fish;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Header from \"./Header\";\r\nimport Order from \"./Order\";\r\nimport Inventory from \"./Inventory\";\r\nimport sampleFishes from \"../sample-fishes\";\r\nimport Fish from \"./Fish\";\r\nimport base from \"../base\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    fishes: {},\r\n    order: {}\r\n  };\r\n\r\n  static propTypes = {\r\n    match: PropTypes.shape({\r\n      isExact: PropTypes.bool.isRequired,\r\n      params: PropTypes.shape({\r\n        storeId: PropTypes.string.isRequired\r\n      }),\r\n      path: PropTypes.string.isRequired,\r\n      url: PropTypes.string.isRequired\r\n    }).isRequired\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { params } = this.props.match;\r\n    // first, reinstate our local storage\r\n    const localStorageRef = localStorage.getItem(params.storeId);\r\n\r\n    if (localStorageRef) {\r\n      this.setState({ order: JSON.parse(localStorageRef) });\r\n    }\r\n\r\n    this.ref = base.syncState(`${params.storeId}/fishes`, {\r\n      context: this,\r\n      state: \"fishes\"\r\n    });\r\n  }\r\n\r\n  //called each time we add to order\r\n  componentDidUpdate() {\r\n    const { params } = this.props.match;\r\n    localStorage.setItem(params.storeId, JSON.stringify(this.state.order));\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    base.removeBinding(this.ref);\r\n  }\r\n\r\n  addFish = (fish) => {\r\n    // 1. Take a copy of the existing state\r\n    const fishes = { ...this.state.fishes };\r\n    // 2. Add our new fish to the 'fishes' variable\r\n    fishes[`fish${Date.now()}`] = fish;\r\n    // 3. Set the new fishes object into state\r\n    this.setState({ fishes });\r\n  };\r\n\r\n  updateFish = (key, updatedFish) => {\r\n    // 1. Take a copy of the current state\r\n    const fishes = { ...this.state.fishes };\r\n    // 2. Update that state\r\n    fishes[key] = updatedFish;\r\n    // 3. Set that to state\r\n    this.setState({ fishes });\r\n  };\r\n\r\n  deleteFish = (key) => {\r\n    // 1. Take a copy of the current state\r\n    const fishes = { ...this.state.fishes };\r\n    // 2. Update that state - set the fish we don't want to null due to Firebase\r\n    fishes[key] = null;\r\n    // 3. Set that to state\r\n    this.setState({ fishes });\r\n  };\r\n\r\n  loadSampleFishes = () => {\r\n    this.setState({ fishes: sampleFishes });\r\n  };\r\n\r\n  addToOrder = (key) => {\r\n    // 1. Take a copy of state\r\n    const order = { ...this.state.order };\r\n    // 2. Either add to the order, or update the number in our order (when we add a following qty, after initial one)\r\n    order[key] = order[key] + 1 || 1;\r\n    // 3. Call setState to update our state object\r\n    this.setState({ order });\r\n  };\r\n\r\n  removeOneFromOrder = (key) => {\r\n    // 1. Take a copy of the current state\r\n    const order = { ...this.state.order };\r\n    // 2. Remove qty 1 from the order (his is only delete order[key] but this is better as it allows removing qty 1 from a fish at a time, not e.g. all 2 pieces)\r\n    if (order[key] > 1) {\r\n      order[key] = order[key] - 1;\r\n    } else delete order[key];\r\n    // 3. Update state\r\n    this.setState({ order });\r\n  };\r\n\r\n  removeAllFromOrder = (key) => {\r\n    const order = { ...this.state.order };\r\n    delete order[key];\r\n    this.setState({ order });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"catch-of-the-day\">\r\n        <div className=\"menu\">\r\n          <Header tagline=\"Fresh Seafood Market\" />\r\n          <ul className=\"fishes\">\r\n            {Object.keys(this.state.fishes).map((key) => (\r\n              <Fish\r\n                key={key}\r\n                index={key}\r\n                details={this.state.fishes[key]}\r\n                addToOrder={this.addToOrder}\r\n              />\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        <Order\r\n          fishes={this.state.fishes}\r\n          order={this.state.order}\r\n          removeOneFromOrder={this.removeOneFromOrder}\r\n          removeAllFromOrder={this.removeAllFromOrder}\r\n        />\r\n        <Inventory\r\n          addFish={this.addFish}\r\n          updateFish={this.updateFish}\r\n          deleteFish={this.deleteFish}\r\n          loadSampleFishes={this.loadSampleFishes}\r\n          fishes={this.state.fishes}\r\n          storeId={this.props.match.params.storeId}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => (\r\n  <div>\r\n    <h2>NotFound!!!!!</h2>\r\n  </div>\r\n);\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport StorePicker from \"./StorePicker\";\r\nimport App from \"./App\";\r\nimport NotFound from \"./NotFound\";\r\n\r\nconst Router = () => (\r\n  <BrowserRouter>\r\n    <Switch>\r\n      <Route exact path=\"/\" component={StorePicker} />\r\n      <Route path=\"/store/:storeId\" component={App} />\r\n      <Route component={NotFound} />\r\n    </Switch>\r\n  </BrowserRouter>\r\n);\r\n\r\nexport default Router;\r\n","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport Router from \"./components/Router\";\r\nimport \"./css/style.css\";\r\n\r\nrender(<Router />, document.getElementById(\"main\"));\r\n"],"sourceRoot":""}