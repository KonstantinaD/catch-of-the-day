{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\Home\\\\Desktop\\\\React For Beginners\\\\catch-of-the-day\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\Home\\\\Desktop\\\\React For Beginners\\\\catch-of-the-day\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\Home\\\\Desktop\\\\React For Beginners\\\\catch-of-the-day\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\Home\\\\Desktop\\\\React For Beginners\\\\catch-of-the-day\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\Users\\\\Home\\\\Desktop\\\\React For Beginners\\\\catch-of-the-day\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component}from\"react\";import{TransitionGroup,CSSTransition}from\"react-transition-group\";import{formatPrice}from\"../helpers\";var Order=/*#__PURE__*/function(_Component){_inherits(Order,_Component);function Order(){var _getPrototypeOf2;var _this;_classCallCheck(this,Order);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(Order)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.renderOrder=function(key){var fish=_this.props.fishes[key];var count=_this.props.order[key];var isAvailable=fish&&fish.status===\"available\";var transitionOptions={classNames:\"order\",key:key,timeout:{enter:500,exit:500}};var buttonRemoveAll;if(count>1){buttonRemoveAll=React.createElement(\"button\",{onClick:function onClick(){return _this.props.removeAllFromOrder(key);}},\"\\xD7\");}//make sure the fish is loaded before we continue - don't display in Order until we get the fish in the menu\nif(!fish)return null;if(!isAvailable){return React.createElement(CSSTransition,transitionOptions,React.createElement(\"li\",{key:key},\"Sorry, \",fish?fish.name:\"the fish\",\" is no longer available\"));}return React.createElement(CSSTransition,transitionOptions,React.createElement(\"li\",{key:key},React.createElement(\"span\",null,React.createElement(TransitionGroup,{component:\"span\",className:\"count\"},React.createElement(CSSTransition,{classNames:\"count\",key:count,timeout:{enter:500,exit:500}},React.createElement(\"span\",null,count))),\"lbs \",fish.name,\" \",formatPrice(count*fish.price),React.createElement(\"button\",{onClick:function onClick(){return _this.props.removeOneFromOrder(key);}},\"\\xD7\")),buttonRemoveAll));};return _this;}_createClass(Order,[{key:\"render\",value:function render(){var _this2=this;var orderFishIds=Object.keys(this.props.order);var total=orderFishIds.reduce(function(prevTotal,key){var fish=_this2.props.fishes[key];var count=_this2.props.order[key];var isAvailable=fish&&fish.status===\"available\";if(isAvailable){return prevTotal+count*fish.price;}return prevTotal;},0);return React.createElement(\"div\",{className:\"order-wrap\"},React.createElement(\"h2\",null,\"Order\"),React.createElement(TransitionGroup,{component:\"ul\",className:\"order\"},orderFishIds.map(this.renderOrder)),React.createElement(\"div\",{className:\"total\"},\"Total:\",React.createElement(\"strong\",null,formatPrice(total))));}}]);return Order;}(Component);export default Order;","map":{"version":3,"sources":["C:/Users/Home/Desktop/React For Beginners/catch-of-the-day/src/components/Order.js"],"names":["React","Component","TransitionGroup","CSSTransition","formatPrice","Order","renderOrder","key","fish","props","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","buttonRemoveAll","removeAllFromOrder","name","price","removeOneFromOrder","orderFishIds","Object","keys","total","reduce","prevTotal","map"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport PropTypes from \"prop-types\";\r\nimport { formatPrice } from \"../helpers\";\r\n\r\nclass Order extends Component {\r\n  static propTypes = {\r\n    fishes: PropTypes.objectOf(\r\n      PropTypes.shape({\r\n        image: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        desc: PropTypes.string.isRequired,\r\n        status: PropTypes.string.isRequired,\r\n        price: PropTypes.string.isRequired\r\n      }).isRequired\r\n    ).isRequired,\r\n    order: PropTypes.objectOf(PropTypes.number.isRequired).isRequired,\r\n    removeOneFromOrder: PropTypes.func.isRequired,\r\n    removeAllFromOrder: PropTypes.func.isRequired\r\n  };\r\n\r\n  renderOrder = (key) => {\r\n    const fish = this.props.fishes[key];\r\n    const count = this.props.order[key];\r\n    const isAvailable = fish && fish.status === \"available\";\r\n    const transitionOptions = {\r\n      classNames: \"order\",\r\n      key,\r\n      timeout: { enter: 500, exit: 500 }\r\n    };\r\n\r\n    let buttonRemoveAll;\r\n    if (count > 1) {\r\n      buttonRemoveAll = (\r\n        <button onClick={() => this.props.removeAllFromOrder(key)}>\r\n          &times;\r\n        </button>\r\n      );\r\n    }\r\n\r\n    //make sure the fish is loaded before we continue - don't display in Order until we get the fish in the menu\r\n    if (!fish) return null;\r\n\r\n    if (!isAvailable) {\r\n      return (\r\n        <CSSTransition {...transitionOptions}>\r\n          <li key={key}>\r\n            Sorry, {fish ? fish.name : \"the fish\"} is no longer available\r\n          </li>\r\n        </CSSTransition>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <CSSTransition {...transitionOptions}>\r\n        <li key={key}>\r\n          <span>\r\n            <TransitionGroup component=\"span\" className=\"count\">\r\n              <CSSTransition\r\n                classNames=\"count\"\r\n                key={count}\r\n                timeout={{ enter: 500, exit: 500 }}\r\n              >\r\n                <span>{count}</span>\r\n              </CSSTransition>\r\n            </TransitionGroup>\r\n            lbs {fish.name} {formatPrice(count * fish.price)}\r\n            <button onClick={() => this.props.removeOneFromOrder(key)}>\r\n              &times;\r\n            </button>\r\n          </span>\r\n          {buttonRemoveAll}\r\n        </li>\r\n      </CSSTransition>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const orderFishIds = Object.keys(this.props.order);\r\n    const total = orderFishIds.reduce((prevTotal, key) => {\r\n      const fish = this.props.fishes[key];\r\n      const count = this.props.order[key];\r\n      const isAvailable = fish && fish.status === \"available\";\r\n      if (isAvailable) {\r\n        return prevTotal + count * fish.price;\r\n      }\r\n      return prevTotal;\r\n    }, 0);\r\n\r\n    return (\r\n      <div className=\"order-wrap\">\r\n        <h2>Order</h2>\r\n        <TransitionGroup component=\"ul\" className=\"order\">\r\n          {orderFishIds.map(this.renderOrder)}\r\n        </TransitionGroup>\r\n        <div className=\"total\">\r\n          Total:\r\n          <strong>{formatPrice(total)}</strong>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Order;\r\n"]},"metadata":{},"sourceType":"module"}