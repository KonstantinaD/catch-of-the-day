{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Home\\\\Desktop\\\\React For Beginners\\\\catch-of-the-day\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Home\\\\Desktop\\\\React For Beginners\\\\catch-of-the-day\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Home\\\\Desktop\\\\React For Beginners\\\\catch-of-the-day\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Home\\\\Desktop\\\\React For Beginners\\\\catch-of-the-day\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Home\\\\Desktop\\\\React For Beginners\\\\catch-of-the-day\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Home\\\\Desktop\\\\React For Beginners\\\\catch-of-the-day\\\\src\\\\components\\\\Order.js\";\nimport React, { Component } from \"react\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport PropTypes from \"prop-types\";\nimport { formatPrice } from \"../helpers\";\n\nvar Order =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Order, _Component);\n\n  function Order() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Order);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Order)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.renderOrder = function (key) {\n      var fish = _this.props.fishes[key];\n      var count = _this.props.order[key];\n      var isAvailable = fish && fish.status === \"available\";\n      var transitionOptions = {\n        classNames: \"order\",\n        key: key,\n        timeout: {\n          enter: 500,\n          exit: 500\n        }\n      };\n      var buttonRemoveAll;\n\n      if (count > 1) {\n        buttonRemoveAll = React.createElement(\"button\", {\n          onClick: function onClick() {\n            return _this.props.removeAllFromOrder(key);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, \"\\xD7\");\n      } //make sure the fish is loaded before we continue - don't display in Order until we get the fish in the menu\n\n\n      if (!fish) return null;\n\n      if (!isAvailable) {\n        return React.createElement(CSSTransition, Object.assign({}, transitionOptions, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }), React.createElement(\"li\", {\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, \"Sorry, \", fish ? fish.name : \"the fish\", \" is no longer available\"));\n      }\n\n      return React.createElement(CSSTransition, Object.assign({}, transitionOptions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(\"li\", {\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(TransitionGroup, {\n        component: \"span\",\n        className: \"count\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(CSSTransition, {\n        classNames: \"count\",\n        key: count,\n        timeout: {\n          enter: 500,\n          exit: 500\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, count))), \"lbs \", fish.name, \" \", formatPrice(count * fish.price), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this.props.removeOneFromOrder(key);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"\\xD7\")), buttonRemoveAll));\n    };\n\n    return _this;\n  }\n\n  _createClass(Order, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var orderFishIds = Object.keys(this.props.order);\n      var total = orderFishIds.reduce(function (prevTotal, key) {\n        var fish = _this2.props.fishes[key];\n        var count = _this2.props.order[key];\n        var isAvailable = fish && fish.status === \"available\";\n\n        if (isAvailable) {\n          return prevTotal + count * fish.price;\n        }\n\n        return prevTotal;\n      }, 0);\n      return React.createElement(\"div\", {\n        className: \"order-wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Order\"), React.createElement(TransitionGroup, {\n        component: \"ul\",\n        className: \"order\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, orderFishIds.map(this.renderOrder)), React.createElement(\"div\", {\n        className: \"total\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Total:\", React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, formatPrice(total))));\n    }\n  }]);\n\n  return Order;\n}(Component);\n\nOrder.propTypes = {\n  fishes: PropTypes.objectOf(PropTypes.shape({\n    image: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    desc: PropTypes.string.isRequired,\n    status: PropTypes.string.isRequired,\n    price: PropTypes.string.isRequired\n  }).isRequired).isRequired,\n  order: PropTypes.objectOf(PropTypes.number.isRequired).isRequired,\n  removeOneFromOrder: PropTypes.func.isRequired,\n  removeAllFromOrder: PropTypes.func.isRequired\n};\nexport default Order;","map":{"version":3,"sources":["C:/Users/Home/Desktop/React For Beginners/catch-of-the-day/src/components/Order.js"],"names":["React","Component","TransitionGroup","CSSTransition","PropTypes","formatPrice","Order","renderOrder","key","fish","props","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","buttonRemoveAll","removeAllFromOrder","name","price","removeOneFromOrder","orderFishIds","Object","keys","total","reduce","prevTotal","map","propTypes","objectOf","shape","image","string","isRequired","desc","number","func"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport PropTypes from \"prop-types\";\r\nimport { formatPrice } from \"../helpers\";\r\n\r\nclass Order extends Component {\r\n  static propTypes = {\r\n    fishes: PropTypes.objectOf(\r\n      PropTypes.shape({\r\n        image: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        desc: PropTypes.string.isRequired,\r\n        status: PropTypes.string.isRequired,\r\n        price: PropTypes.string.isRequired\r\n      }).isRequired\r\n    ).isRequired,\r\n    order: PropTypes.objectOf(PropTypes.number.isRequired).isRequired,\r\n    removeOneFromOrder: PropTypes.func.isRequired,\r\n    removeAllFromOrder: PropTypes.func.isRequired\r\n  };\r\n\r\n  renderOrder = (key) => {\r\n    const fish = this.props.fishes[key];\r\n    const count = this.props.order[key];\r\n    const isAvailable = fish && fish.status === \"available\";\r\n    const transitionOptions = {\r\n      classNames: \"order\",\r\n      key,\r\n      timeout: { enter: 500, exit: 500 }\r\n    };\r\n\r\n    let buttonRemoveAll;\r\n    if (count > 1) {\r\n      buttonRemoveAll = (\r\n        <button onClick={() => this.props.removeAllFromOrder(key)}>\r\n          &times;\r\n        </button>\r\n      );\r\n    }\r\n\r\n    //make sure the fish is loaded before we continue - don't display in Order until we get the fish in the menu\r\n    if (!fish) return null;\r\n\r\n    if (!isAvailable) {\r\n      return (\r\n        <CSSTransition {...transitionOptions}>\r\n          <li key={key}>\r\n            Sorry, {fish ? fish.name : \"the fish\"} is no longer available\r\n          </li>\r\n        </CSSTransition>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <CSSTransition {...transitionOptions}>\r\n        <li key={key}>\r\n          <span>\r\n            <TransitionGroup component=\"span\" className=\"count\">\r\n              <CSSTransition\r\n                classNames=\"count\"\r\n                key={count}\r\n                timeout={{ enter: 500, exit: 500 }}\r\n              >\r\n                <span>{count}</span>\r\n              </CSSTransition>\r\n            </TransitionGroup>\r\n            lbs {fish.name} {formatPrice(count * fish.price)}\r\n            <button onClick={() => this.props.removeOneFromOrder(key)}>\r\n              &times;\r\n            </button>\r\n          </span>\r\n          {buttonRemoveAll}\r\n        </li>\r\n      </CSSTransition>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const orderFishIds = Object.keys(this.props.order);\r\n    const total = orderFishIds.reduce((prevTotal, key) => {\r\n      const fish = this.props.fishes[key];\r\n      const count = this.props.order[key];\r\n      const isAvailable = fish && fish.status === \"available\";\r\n      if (isAvailable) {\r\n        return prevTotal + count * fish.price;\r\n      }\r\n      return prevTotal;\r\n    }, 0);\r\n\r\n    return (\r\n      <div className=\"order-wrap\">\r\n        <h2>Order</h2>\r\n        <TransitionGroup component=\"ul\" className=\"order\">\r\n          {orderFishIds.map(this.renderOrder)}\r\n        </TransitionGroup>\r\n        <div className=\"total\">\r\n          Total:\r\n          <strong>{formatPrice(total)}</strong>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Order;\r\n"]},"metadata":{},"sourceType":"module"}