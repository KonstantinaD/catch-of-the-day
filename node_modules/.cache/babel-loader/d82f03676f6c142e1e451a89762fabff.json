{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Home\\\\Desktop\\\\React For Beginners\\\\catch-of-the-day\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\Home\\\\Desktop\\\\React For Beginners\\\\catch-of-the-day\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Home\\\\Desktop\\\\React For Beginners\\\\catch-of-the-day\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Home\\\\Desktop\\\\React For Beginners\\\\catch-of-the-day\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Home\\\\Desktop\\\\React For Beginners\\\\catch-of-the-day\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Home\\\\Desktop\\\\React For Beginners\\\\catch-of-the-day\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\Home\\\\Desktop\\\\React For Beginners\\\\catch-of-the-day\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Home\\\\Desktop\\\\React For Beginners\\\\catch-of-the-day\\\\src\\\\components\\\\Inventory.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport AddFishForm from \"./AddFishForm\";\nimport EditFishForm from \"./EditFishForm\";\nimport Login from \"./Login\";\nimport base, { firebaseApp } from \"../base\";\n\nvar Inventory =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Inventory, _Component);\n\n  function Inventory() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Inventory);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Inventory)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.authHandler = function _callee(authData) {\n      var store;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(base.fetch(_this.props.storeId, {\n                context: _assertThisInitialized(_this)\n              }));\n\n            case 2:\n              store = _context.sent;\n              console.log(store); // 2. Claim it if there is no owner - if we are the first person to log in, we are likely the owner - we will claim it as an owner and save that data to the Firebase db\n              // 3. Set the state of the Inventory component to reflect the current user\n\n              console.log(authData);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    };\n\n    _this.authenticate = function (provider) {\n      var authProvider = new firebase.auth[\"\".concat(provider, \"AuthProvider\")]();\n      firebaseApp.auth().signInWithPopup(authProvider).then(_this.authHandler);\n    };\n\n    return _this;\n  }\n\n  _createClass(Inventory, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Login, {\n        authenticate: this.authenticate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      });\n      return React.createElement(\"div\", {\n        className: \"inventory\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Inventory\"), Object.keys(this.props.fishes).map(function (key) {\n        return React.createElement(EditFishForm, {\n          key: key,\n          index: key,\n          fish: _this2.props.fishes[key],\n          updateFish: _this2.props.updateFish,\n          deleteFish: _this2.props.deleteFish,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        });\n      }), React.createElement(AddFishForm, {\n        addFish: this.props.addFish,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.props.loadSampleFishes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Load Sample Fishes\"));\n    }\n  }]);\n\n  return Inventory;\n}(Component);\n\nInventory.propTypes = {\n  fishes: PropTypes.objectOf(PropTypes.shape({\n    image: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    desc: PropTypes.string.isRequired,\n    status: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired\n  }).isRequired).isRequired,\n  loadSampleFishes: PropTypes.func.isRequired,\n  addFish: PropTypes.func.isRequired,\n  updateFish: PropTypes.func.isRequired,\n  deleteFish: PropTypes.func.isRequired\n};\nexport default Inventory;","map":{"version":3,"sources":["C:/Users/Home/Desktop/React For Beginners/catch-of-the-day/src/components/Inventory.js"],"names":["React","Component","PropTypes","firebase","AddFishForm","EditFishForm","Login","base","firebaseApp","Inventory","authHandler","authData","fetch","props","storeId","context","store","console","log","authenticate","provider","authProvider","auth","signInWithPopup","then","Object","keys","fishes","map","key","updateFish","deleteFish","addFish","loadSampleFishes","propTypes","objectOf","shape","image","string","isRequired","name","desc","status","price","number","func"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport AddFishForm from \"./AddFishForm\";\r\nimport EditFishForm from \"./EditFishForm\";\r\nimport Login from \"./Login\";\r\nimport base, { firebaseApp } from \"../base\";\r\n\r\nclass Inventory extends Component {\r\n  static propTypes = {\r\n    fishes: PropTypes.objectOf(\r\n      PropTypes.shape({\r\n        image: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        desc: PropTypes.string.isRequired,\r\n        status: PropTypes.string.isRequired,\r\n        price: PropTypes.number.isRequired\r\n      }).isRequired\r\n    ).isRequired,\r\n    loadSampleFishes: PropTypes.func.isRequired,\r\n    addFish: PropTypes.func.isRequired,\r\n    updateFish: PropTypes.func.isRequired,\r\n    deleteFish: PropTypes.func.isRequired\r\n  };\r\n\r\n  authHandler = async (authData) => {\r\n    // 1. Look up the current store in the Firebase database\r\n    const store = await base.fetch(this.props.storeId, { context: this });\r\n    console.log(store);\r\n    // 2. Claim it if there is no owner - if we are the first person to log in, we are likely the owner - we will claim it as an owner and save that data to the Firebase db\r\n    // 3. Set the state of the Inventory component to reflect the current user\r\n    console.log(authData);\r\n  };\r\n\r\n  authenticate = (provider) => {\r\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]();\r\n    firebaseApp.auth().signInWithPopup(authProvider).then(this.authHandler);\r\n  };\r\n\r\n  render() {\r\n    return <Login authenticate={this.authenticate} />;\r\n    return (\r\n      <div className=\"inventory\">\r\n        <h2>Inventory</h2>\r\n        {Object.keys(this.props.fishes).map((key) => (\r\n          <EditFishForm\r\n            key={key}\r\n            index={key}\r\n            fish={this.props.fishes[key]}\r\n            updateFish={this.props.updateFish}\r\n            deleteFish={this.props.deleteFish}\r\n          />\r\n        ))}\r\n        <AddFishForm addFish={this.props.addFish} />\r\n        <button onClick={this.props.loadSampleFishes}>\r\n          Load Sample Fishes\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Inventory;\r\n"]},"metadata":{},"sourceType":"module"}