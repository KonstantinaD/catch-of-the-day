{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\Home\\\\Desktop\\\\React For Beginners\\\\catch-of-the-day\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"C:\\\\Users\\\\Home\\\\Desktop\\\\React For Beginners\\\\catch-of-the-day\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\Home\\\\Desktop\\\\React For Beginners\\\\catch-of-the-day\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\Home\\\\Desktop\\\\React For Beginners\\\\catch-of-the-day\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\Home\\\\Desktop\\\\React For Beginners\\\\catch-of-the-day\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\Users\\\\Home\\\\Desktop\\\\React For Beginners\\\\catch-of-the-day\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component}from\"react\";import Header from\"./Header\";import Order from\"./Order\";import Inventory from\"./Inventory\";import sampleFishes from\"../sample-fishes\";import Fish from\"./Fish\";import base from\"../base\";var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);function App(){var _getPrototypeOf2;var _this;_classCallCheck(this,App);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(App)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={fishes:{},order:{}};_this.addFish=function(fish){// 1. Take a copy of the existing state\nvar fishes=_objectSpread({},_this.state.fishes);// 2. Add our new fish to the 'fishes' variable\nfishes[\"fish\".concat(Date.now())]=fish;// 3. Set the new fishes object into state\n_this.setState({fishes:fishes});};_this.updateFish=function(key,updatedFish){// 1. Take a copy of the current state\nvar fishes=_objectSpread({},_this.state.fishes);// 2. Update that state\nfishes[key]=updatedFish;// 3. Set that to state\n_this.setState({fishes:fishes});};_this.deleteFish=function(key){// 1. Take a copy of the current state\nvar fishes=_objectSpread({},_this.state.fishes);// 2. Update that state - set the fish we don't want to null due to Firebase\nfishes[key]=null;// 3. Set that to state\n_this.setState({fishes:fishes});};_this.loadSampleFishes=function(){_this.setState({fishes:sampleFishes});};_this.addToOrder=function(key){// 1. Take a copy of state\nvar order=_objectSpread({},_this.state.order);// 2. Either add to the order, or update the number in our order (when we add a following qty, after initial one)\norder[key]=order[key]+1||1;// 3. Call setState to update our state object\n_this.setState({order:order});};_this.removeOneFromOrder=function(key){// 1. Take a copy of the current state\nvar order=_objectSpread({},_this.state.order);// 2. Remove qty 1 from the order (his is only delete order[key] but this is better as it allows removing qty 1 from a fish at a time, not e.g. all 2 pieces)\nif(order[key]>1){order[key]=order[key]-1;}else delete order[key];// 3. Update state\n_this.setState({order:order});};_this.removeAllFromOrder=function(key){var order=_objectSpread({},_this.state.order);delete order[key];_this.setState({order:order});};return _this;}_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){var params=this.props.match.params;// first, reinstate our local storage\nvar localStorageRef=localStorage.getItem(params.storeId);if(localStorageRef){this.setState({order:JSON.parse(localStorageRef)});}this.ref=base.syncState(\"\".concat(params.storeId,\"/fishes\"),{context:this,state:\"fishes\"});}//called each time we add to order\n},{key:\"componentDidUpdate\",value:function componentDidUpdate(){var params=this.props.match.params;localStorage.setItem(params.storeId,JSON.stringify(this.state.order));}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){base.removeBinding(this.ref);}},{key:\"render\",value:function render(){var _this2=this;return React.createElement(\"div\",{className:\"catch-of-the-day\"},React.createElement(\"div\",{className:\"menu\"},React.createElement(Header,{tagline:\"Fresh Seafood Market\"}),React.createElement(\"ul\",{className:\"fishes\"},Object.keys(this.state.fishes).map(function(key){return React.createElement(Fish,{key:key,index:key,details:_this2.state.fishes[key],addToOrder:_this2.addToOrder});}))),React.createElement(Order,{fishes:this.state.fishes,order:this.state.order,removeOneFromOrder:this.removeOneFromOrder,removeAllFromOrder:this.removeAllFromOrder}),React.createElement(Inventory,{addFish:this.addFish,updateFish:this.updateFish,deleteFish:this.deleteFish,loadSampleFishes:this.loadSampleFishes,fishes:this.state.fishes,storeId:this.props.match.params.storeId}));}}]);return App;}(Component);export default App;","map":{"version":3,"sources":["C:/Users/Home/Desktop/React For Beginners/catch-of-the-day/src/components/App.js"],"names":["React","Component","Header","Order","Inventory","sampleFishes","Fish","base","App","state","fishes","order","addFish","fish","Date","now","setState","updateFish","key","updatedFish","deleteFish","loadSampleFishes","addToOrder","removeOneFromOrder","removeAllFromOrder","params","props","match","localStorageRef","localStorage","getItem","storeId","JSON","parse","ref","syncState","context","setItem","stringify","removeBinding","Object","keys","map"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Header from \"./Header\";\r\nimport Order from \"./Order\";\r\nimport Inventory from \"./Inventory\";\r\nimport sampleFishes from \"../sample-fishes\";\r\nimport Fish from \"./Fish\";\r\nimport base from \"../base\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    fishes: {},\r\n    order: {}\r\n  };\r\n\r\n  static propTypes = {\r\n    match: PropTypes.shape({\r\n      isExact: PropTypes.bool.isRequired,\r\n      params: PropTypes.shape({\r\n        storeId: PropTypes.string.isRequired\r\n      }),\r\n      path: PropTypes.string.isRequired,\r\n      url: PropTypes.string.isRequired\r\n    }).isRequired\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { params } = this.props.match;\r\n    // first, reinstate our local storage\r\n    const localStorageRef = localStorage.getItem(params.storeId);\r\n\r\n    if (localStorageRef) {\r\n      this.setState({ order: JSON.parse(localStorageRef) });\r\n    }\r\n\r\n    this.ref = base.syncState(`${params.storeId}/fishes`, {\r\n      context: this,\r\n      state: \"fishes\"\r\n    });\r\n  }\r\n\r\n  //called each time we add to order\r\n  componentDidUpdate() {\r\n    const { params } = this.props.match;\r\n    localStorage.setItem(params.storeId, JSON.stringify(this.state.order));\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    base.removeBinding(this.ref);\r\n  }\r\n\r\n  addFish = (fish) => {\r\n    // 1. Take a copy of the existing state\r\n    const fishes = { ...this.state.fishes };\r\n    // 2. Add our new fish to the 'fishes' variable\r\n    fishes[`fish${Date.now()}`] = fish;\r\n    // 3. Set the new fishes object into state\r\n    this.setState({ fishes });\r\n  };\r\n\r\n  updateFish = (key, updatedFish) => {\r\n    // 1. Take a copy of the current state\r\n    const fishes = { ...this.state.fishes };\r\n    // 2. Update that state\r\n    fishes[key] = updatedFish;\r\n    // 3. Set that to state\r\n    this.setState({ fishes });\r\n  };\r\n\r\n  deleteFish = (key) => {\r\n    // 1. Take a copy of the current state\r\n    const fishes = { ...this.state.fishes };\r\n    // 2. Update that state - set the fish we don't want to null due to Firebase\r\n    fishes[key] = null;\r\n    // 3. Set that to state\r\n    this.setState({ fishes });\r\n  };\r\n\r\n  loadSampleFishes = () => {\r\n    this.setState({ fishes: sampleFishes });\r\n  };\r\n\r\n  addToOrder = (key) => {\r\n    // 1. Take a copy of state\r\n    const order = { ...this.state.order };\r\n    // 2. Either add to the order, or update the number in our order (when we add a following qty, after initial one)\r\n    order[key] = order[key] + 1 || 1;\r\n    // 3. Call setState to update our state object\r\n    this.setState({ order });\r\n  };\r\n\r\n  removeOneFromOrder = (key) => {\r\n    // 1. Take a copy of the current state\r\n    const order = { ...this.state.order };\r\n    // 2. Remove qty 1 from the order (his is only delete order[key] but this is better as it allows removing qty 1 from a fish at a time, not e.g. all 2 pieces)\r\n    if (order[key] > 1) {\r\n      order[key] = order[key] - 1;\r\n    } else delete order[key];\r\n    // 3. Update state\r\n    this.setState({ order });\r\n  };\r\n\r\n  removeAllFromOrder = (key) => {\r\n    const order = { ...this.state.order };\r\n    delete order[key];\r\n    this.setState({ order });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"catch-of-the-day\">\r\n        <div className=\"menu\">\r\n          <Header tagline=\"Fresh Seafood Market\" />\r\n          <ul className=\"fishes\">\r\n            {Object.keys(this.state.fishes).map((key) => (\r\n              <Fish\r\n                key={key}\r\n                index={key}\r\n                details={this.state.fishes[key]}\r\n                addToOrder={this.addToOrder}\r\n              />\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        <Order\r\n          fishes={this.state.fishes}\r\n          order={this.state.order}\r\n          removeOneFromOrder={this.removeOneFromOrder}\r\n          removeAllFromOrder={this.removeAllFromOrder}\r\n        />\r\n        <Inventory\r\n          addFish={this.addFish}\r\n          updateFish={this.updateFish}\r\n          deleteFish={this.deleteFish}\r\n          loadSampleFishes={this.loadSampleFishes}\r\n          fishes={this.state.fishes}\r\n          storeId={this.props.match.params.storeId}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}